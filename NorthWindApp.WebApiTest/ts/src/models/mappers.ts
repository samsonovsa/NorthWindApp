/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as msRest from "@azure/ms-rest-js";


export const ProblemDetails: msRest.CompositeMapper = {
  serializedName: "ProblemDetails",
  type: {
    name: "Composite",
    className: "ProblemDetails",
    modelProperties: {
      type: {
        serializedName: "type",
        type: {
          name: "String"
        }
      },
      title: {
        serializedName: "title",
        type: {
          name: "String"
        }
      },
      status: {
        serializedName: "status",
        type: {
          name: "Number"
        }
      },
      detail: {
        serializedName: "detail",
        type: {
          name: "String"
        }
      },
      instance: {
        serializedName: "instance",
        type: {
          name: "String"
        }
      },
      extensions: {
        serializedName: "extensions",
        type: {
          name: "Dictionary",
          value: {
            type: {
              name: "Object"
            }
          }
        }
      }
    }
  }
};

export const Resource: msRest.CompositeMapper = {
  serializedName: "Resource",
  type: {
    name: "Composite",
    className: "Resource",
    modelProperties: {
      href: {
        serializedName: "href",
        type: {
          name: "String"
        }
      }
    }
  }
};

export const ProductApi: msRest.CompositeMapper = {
  serializedName: "ProductApi",
  type: {
    name: "Composite",
    className: "ProductApi",
    modelProperties: {
      ...Resource.type.modelProperties,
      id: {
        required: true,
        serializedName: "id",
        type: {
          name: "Number"
        }
      },
      name: {
        required: true,
        serializedName: "name",
        constraints: {
          MinLength: 1
        },
        type: {
          name: "String"
        }
      },
      supplierId: {
        serializedName: "supplierId",
        type: {
          name: "Number"
        }
      },
      categoryId: {
        serializedName: "categoryId",
        type: {
          name: "Number"
        }
      },
      quantityPerUnit: {
        serializedName: "quantityPerUnit",
        type: {
          name: "String"
        }
      },
      unitPrice: {
        serializedName: "unitPrice",
        constraints: {
          InclusiveMaximum: 999.99,
          InclusiveMinimum: 0
        },
        type: {
          name: "Number"
        }
      },
      unitsInStock: {
        serializedName: "unitsInStock",
        type: {
          name: "Number"
        }
      },
      unitsOnOrder: {
        serializedName: "unitsOnOrder",
        type: {
          name: "Number"
        }
      },
      reorderLevel: {
        serializedName: "reorderLevel",
        type: {
          name: "Number"
        }
      },
      discontinued: {
        required: true,
        serializedName: "discontinued",
        type: {
          name: "Boolean"
        }
      }
    }
  }
};
